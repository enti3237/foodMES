Imports Excel = Microsoft.Office.Interop.Excel
Public Class Frm_QC_Report1
    Dim xlapp As Excel.Application
    Dim xlbook As Excel.Workbook
    Dim xlsheet As Excel.Worksheet
    Dim Excel_Check As Boolean
    Private Sub Frm_QC_Report1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Me.Dock = DockStyle.Fill
        Me.BringToFront()

        S_Text_Setup()
        Grid_Main_Setup()

        Panel_Main.Top = 136
        Panel_Main.Left = 12
        Panel_Excel.Top = 136
        Panel_Excel.Left = 12

        Graph_Panel.Top = 136
        Graph_Panel.Left = 12

        Panel_Main.Visible = True
        Panel_Excel.Visible = False
        Graph_Panel.Visible = False

        Com_Excel_Print.Visible = False
        Chart1.Visible = False
        Chart1.Series("Series1").Name = "불량수량"
    End Sub
    Public Function S_Text_Setup() As Boolean
        E_Day.Text = Format(Now, "yyyy-MM-dd")
        S_Day.Text = Mid(E_Day.Text, 1, 8) & "01"
        S_Time.Text = "00:00"
        E_Time.Text = "23:59"


        S_Text_Setup = True

    End Function

    Public Function Grid_Main_Setup() As Boolean
        Grid_Color(Grid_Main)

        Grid_Main.AllowUserToAddRows = False
        Grid_Main.RowTemplate.Height = 24
        Grid_Main.ColumnCount = 3
        Grid_Main.RowCount = 1

        '만약 헤더의 스타일을 조정하려면 아래 코드에 헤더를 추가한다.
        Grid_Main.Columns(0).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft
        Grid_Main.Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft
        Grid_Main.Columns(2).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
        Grid_Main.RowHeadersWidth = 10


        Grid_Main.Columns(0).HeaderText = "일자"
        Grid_Main.Columns(1).HeaderText = "불량유형"
        Grid_Main.Columns(2).HeaderText = "불량수량"

        Dim i As Integer

        'Grid_Main.Columns(0).Width = 40

        For i = 0 To Grid_Main.ColumnCount - 1
            Grid_Main.Columns(i).Width = 180
        Next i

        For i = 7 To Grid_Main.ColumnCount - 1
            Grid_Main.Columns(i).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
        Next i

        Grid_Main_Setup = True
    End Function

    Private Sub Search_Com_Click(sender As Object, e As EventArgs) Handles Search_Com.Click
        Dim S_T As String
        Dim E_T As String

        Dim DBT As New DataTable
        Dim i As Integer
        Dim j As Integer

        S_T = Mid(S_Day.Text, 1, 4) & Mid(S_Day.Text, 6, 2) & Mid(S_Day.Text, 9, 2)
        E_T = Mid(E_Day.Text, 1, 4) & Mid(E_Day.Text, 6, 2) & Mid(E_Day.Text, 9, 2)
        Grid_Main.RowCount = 0
        '         Select PS_Date, PS_History, Sum(Convert(Decimal,PS_Total)) AS F1 From PO_Stock_Er with(NOLOCK), PO_Stock with(NOLOCK) Where   PO_Stock.PS_Code = PO_Stock_Er.PS_Code And   PS_Date + PS_Time >= '2019-04-0100:00' And PS_Date + PS_Time <= '2019-04-1123:59'  And Len(PS_Total) > 0 GROUP BY PS_Date, PS_History  Order By PS_Date
        StrSQL = "Select PS_Date, PS_History, Sum(Convert(Decimal,PS_Total)) AS F1 From PO_Stock_Er with(NOLOCK), PO_Stock with(NOLOCK) Where   PO_Stock.PS_Code = PO_Stock_Er.PS_Code And  PS_Date + PS_Time >= '" & S_Day.Text & S_Time.Text & "' And PS_Date + PS_Time <= '" & E_Day.Text & E_Time.Text & "'  And Len(PS_Total) > 0 GROUP BY PS_Date, PS_History  Order By PS_Date "
        'Select PS_Date, PS_History, Sum(Convert(Decimal,PS_Total)) AS F1 From PO_Stock_Er with(NOLOCK), PO_Stock with(NOLOCK) Where   PO_Stock.PS_Code = PO_Stock_Er.PS_Code And  And PS_Date + PS_Time >= '2019-04-0100:00' And PS_Date + PS_Time <= '2019-04-1123:59'  And Len(PS_Total) > 0 GROUP BY PS_Date, PS_History  Order By PS_Date 
        Re_Count = DB_Select(DBT)

        If Re_Count <> 0 Then
            Grid_Main.RowCount = Re_Count
            For i = 0 To Re_Count - 1
                'Grid_Main.Item(0, i).Value = Mid(DBT.Rows(i).Item(0).ToString, 3, 4) & "-" & Mid(DBT.Rows(i).Item(0).ToString, 7, 2) & "-" & Mid(DBT.Rows(i).Item(0).ToString, 9, 2)

                For j = 0 To 2
                    Grid_Main.Item(j, i).Value = DBT.Rows(i).Item(j).ToString
                Next j
            Next i
        Else
            Grid_Main.RowCount = 1
            For j = 0 To Grid_Main.ColumnCount - 1
                Grid_Main.Item(j, 0).Value = ""
            Next j
        End If
        '재고수량

        'For i = 0 To Grid_Main.RowCount - 1

        '    StrSQL = "Select Sum(Convert(Decimal,PP_Amount)) AS F1 From Product_Process with(NOLOCK) "
        '    StrSQL = StrSQL & " Where PP_Code = '" & Grid_Main.Item(1, i).Value & "' And Len(PP_Amount) > 0 "
        '    Re_Count = DB_Select(DBT)
        '    If Re_Count <> 0 Then
        '        Grid_Main.Item(7, i).Value = DBT.Rows(0)("F1").ToString
        '    Else
        '        Grid_Main.Item(7, i).Value = "0"

        '    End If

        'Next i

        ' Chart1.Visible = True


    End Sub

    Private Sub Chart_Display()

        Chart1.Visible = True


        Dim DBT As DataTable
        Dim 불량유형개수 As Integer = 0
        Dim 불량유형이름(5) As String
        Dim bad As String = ""

        StrSQL = "Select Sum(Convert(Decimal,PS_Total)) AS F1 
                    From PO_Stock_Er with(NOLOCK), PO_Stock with(NOLOCK) 
                   Where   PO_Stock.PS_Code = PO_Stock_Er.PS_Code  And Len(PS_Total) > 0 GROUP BY PS_Date, PS_History  Order By PS_Date"

        Re_Count = DB_Select(DBT)

        '불량 유형 개수를 센다

        StrSQL = "SELECT BASE_NAME FROM BASE_CODE WHERE BASE_SEL = '불량유형'"
        Re_Count = DB_Select(DBT)

        If Re_Count = 0 Then
        Else
            Dim i As Integer
            불량유형개수 = Re_Count


            If 불량유형개수 > 5 Then
                For i = 0 To 4
                    불량유형개수 = 4
                    불량유형이름(i) = DBT.Rows(i)("BASE_NAME")
                Next
            Else
                For i = 0 To 불량유형개수 - 1
                    불량유형이름(i) = DBT.Rows(i)("BASE_NAME")
                Next
            End If


        End If


        '날짜와 불량유형이 같은것끼리 합계를 더해준다 

        For i = 0 To 불량유형개수 ' ~ 4
            StrSQL = "Select PS_HISTORY, Sum(Convert(Decimal,PS_Total)) AS F1 
                    From PO_Stock_Er with(NOLOCK), PO_Stock with(NOLOCK) 
                   Where PO_Stock.PS_Code = PO_Stock_Er.PS_Code  And Len(PS_Total) > 0 and ps_history='" & 불량유형이름(i) & "' GROUP BY PS_Date, PS_History  Order By PS_Date"


            Re_Count = DB_Select(DBT)

            '그래프에 나타낸다
            If Re_Count <> 0 Then
                Dim j As Integer

                For j = 0 To Re_Count - 1
                    bad = DBT.Rows(j)("F1")
                Next
                Chart1.Series("불량수량").Points.AddXY(불량유형이름(i), bad)
                ' Chart1.Series("불량수량").YValueMembers = "-"
            Else
                Continue For
            End If
        Next
        'Chart1.Series("불량수량").XValueMember = "불량수량"
        ' Chart1.Series("불량수량").YValueMembers = "-"

        'Chart1.DataSource = DBT
        ' Chart1.Series.Clear()
    End Sub


    Private Sub Com_Contract_Click(sender As Object, e As EventArgs) Handles Com_Contract.Click
        If Excel_Check = True Then
            xlbook.Close()
            xlapp.Quit()
            xlsheet = Nothing
            xlbook = Nothing
            xlapp = Nothing
            releaseObject(xlsheet)
            releaseObject(xlbook)
            releaseObject(xlapp)
            Excel_Check = False
        End If
        Label_Color(sender, Color_Label, Di_Panel2)
        '판넬 보이기
        Panel_Main.Visible = True
        Panel_Excel.Visible = False
        Graph_Panel.Visible = False
        Com_Excel_Print.Visible = False

    End Sub

    Private Sub Com_Excel_Click(sender As Object, e As EventArgs) Handles Com_Excel.Click
        Label_Color(sender, Color_Label, Di_Panel2)
        '판넬 보이기
        Panel_Main.Visible = False
        Panel_Excel.Visible = True
        Graph_Panel.Visible = False
        Com_Excel_Print.Visible = True

        Cursor = Cursors.AppStarting


        '여기서 처리

        If Excel_Check = True Then
            xlbook.Close()
            xlapp.Quit()
            xlsheet = Nothing
            xlbook = Nothing
            xlapp = Nothing
            releaseObject(xlsheet)
            releaseObject(xlbook)
            releaseObject(xlapp)
            Excel_Check = False

        End If

        Dim i As Integer
        Dim j As Integer


        xlapp = New Excel.Application
        xlbook = xlapp.Workbooks.Open(Application.StartupPath & "\Excel\불량.xlsx")
        xlsheet = xlbook.ActiveSheet
        xlapp.DisplayAlerts = False
        xlapp.WindowState = Excel.XlWindowState.xlMinimized
        xlapp.Visible = False
        xlapp.DisplayFormulaBar = False
        xlapp.DisplayStatusBar = False




        'PInvoke 에러시 프로젝트 속성에서 컴파일을 x64로 하거나 Any CPU일 경우 32비트 기본 사용 체크를 해제한다.
        'SetWindowLong(xlapp.Hwnd, GWL_STYLE, GetWindowLong(xlapp.Hwnd, GWL_STYLE) And Not WS_CAPTION)

        xlapp.ActiveWindow.DisplayWorkbookTabs = False
        xlapp.ActiveWindow.DisplayHeadings = False

        'xlapp.ActiveWindow.DisplayWorkbookTabs = True
        'xlapp.ActiveWindow.DisplayHeadings = True


        SetParent(xlapp.Hwnd, Panel_Excel.Handle)
        SendMessage(xlapp.Hwnd, WM_SYSCOMMAND, SC_MAXIMIZE, 0)



        '제목

        For j = 0 To Grid_Main.ColumnCount - 1
            xlsheet.Cells(1, j + 1).Value = Grid_Main.Columns(j).HeaderText
            xlsheet.Columns(j + 1).ColumnWidth = Grid_Main.Columns(j).Width / 10

        Next j

        For i = 0 To Grid_Main.RowCount - 1
            For j = 0 To Grid_Main.ColumnCount - 1
                xlsheet.Cells(i + 2, j + 1).Value = "'" & Grid_Main.Item(j, i).Value
            Next j
        Next i



        xlbook.SaveAs(Application.StartupPath & "\Excel\내역서\" & Format(Now, "yyyyMMddHHmmss") & ".xlsx")
        Cursor = Cursors.Default
        Excel_Check = True
    End Sub

    Private Sub Com_Excel_Print_Click(sender As Object, e As EventArgs) Handles Com_Excel_Print.Click
        If Excel_Check = True Then
            xlsheet.PrintOut(From:=1, To:=1, Copies:=1, Collate:=True)
        End If
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click


        Chart1.Series("불량수량").Points.Clear()

        Graph_Panel.Visible = True
        Panel_Excel.Visible = False
        Panel_Main.Visible = False

        Chart_Display()
    End Sub
End Class
